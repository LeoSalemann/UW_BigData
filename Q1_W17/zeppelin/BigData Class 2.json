{"paragraphs":[{"text":"%sh\nhadoop fs -help","dateUpdated":"2017-01-21T01:44:29+0000","config":{"colWidth":12,"editorMode":"ace/mode/sh","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484963069460_-462439318","id":"20170120-205751_810438999","result":{"code":"SUCCESS","type":"TEXT","msg":"Usage: hadoop fs [generic options]\n\t[-appendToFile <localsrc> ... <dst>]\n\t[-cat [-ignoreCrc] <src> ...]\n\t[-checksum <src> ...]\n\t[-chgrp [-R] GROUP PATH...]\n\t[-chmod [-R] <MODE[,MODE]... | OCTALMODE> PATH...]\n\t[-chown [-R] [OWNER][:[GROUP]] PATH...]\n\t[-copyFromLocal [-f] [-p] [-l] <localsrc> ... <dst>]\n\t[-copyToLocal [-p] [-ignoreCrc] [-crc] <src> ... <localdst>]\n\t[-count [-q] [-h] [-v] [-t [<storage type>]] <path> ...]\n\t[-cp [-f] [-p | -p[topax]] <src> ... <dst>]\n\t[-createSnapshot <snapshotDir> [<snapshotName>]]\n\t[-deleteSnapshot <snapshotDir> <snapshotName>]\n\t[-df [-h] [<path> ...]]\n\t[-du [-s] [-h] <path> ...]\n\t[-expunge]\n\t[-find <path> ... <expression> ...]\n\t[-get [-p] [-ignoreCrc] [-crc] <src> ... <localdst>]\n\t[-getfacl [-R] <path>]\n\t[-getfattr [-R] {-n name | -d} [-e en] <path>]\n\t[-getmerge [-nl] <src> <localdst>]\n\t[-help [cmd ...]]\n\t[-ls [-C] [-d] [-h] [-q] [-R] [-t] [-S] [-r] [-u] [<path> ...]]\n\t[-mkdir [-p] <path> ...]\n\t[-moveFromLocal <localsrc> ... <dst>]\n\t[-moveToLocal <src> <localdst>]\n\t[-mv <src> ... <dst>]\n\t[-put [-f] [-p] [-l] <localsrc> ... <dst>]\n\t[-renameSnapshot <snapshotDir> <oldName> <newName>]\n\t[-rm [-f] [-r|-R] [-skipTrash] [-safely] <src> ...]\n\t[-rmdir [--ignore-fail-on-non-empty] <dir> ...]\n\t[-setfacl [-R] [{-b|-k} {-m|-x <acl_spec>} <path>]|[--set <acl_spec> <path>]]\n\t[-setfattr {-n name [-v value] | -x name} <path>]\n\t[-setrep [-R] [-w] <rep> <path> ...]\n\t[-stat [format] <path> ...]\n\t[-tail [-f] <file>]\n\t[-test -[defsz] <path>]\n\t[-text [-ignoreCrc] <src> ...]\n\t[-touchz <path> ...]\n\t[-truncate [-w] <length> <path> ...]\n\t[-usage [cmd ...]]\n\n-appendToFile <localsrc> ... <dst> :\n  Appends the contents of all the given local files to the given dst file. The dst\n  file will be created if it does not exist. If <localSrc> is -, then the input is\n  read from stdin.\n\n-cat [-ignoreCrc] <src> ... :\n  Fetch all files that match the file pattern <src> and display their content on\n  stdout.\n\n-checksum <src> ... :\n  Dump checksum information for files that match the file pattern <src> to stdout.\n  Note that this requires a round-trip to a datanode storing each block of the\n  file, and thus is not efficient to run on a large number of files. The checksum\n  of a file depends on its content, block size and the checksum algorithm and\n  parameters used for creating the file.\n\n-chgrp [-R] GROUP PATH... :\n  This is equivalent to -chown ... :GROUP ...\n\n-chmod [-R] <MODE[,MODE]... | OCTALMODE> PATH... :\n  Changes permissions of a file. This works similar to the shell's chmod command\n  with a few exceptions.\n                                                                                 \n  -R           modifies the files recursively. This is the only option currently \n               supported.                                                        \n  <MODE>       Mode is the same as mode used for the shell's command. The only   \n               letters recognized are 'rwxXt', e.g. +t,a+r,g-w,+rwx,o=r.         \n  <OCTALMODE>  Mode specifed in 3 or 4 digits. If 4 digits, the first may be 1 or\n               0 to turn the sticky bit on or off, respectively.  Unlike the     \n               shell command, it is not possible to specify only part of the     \n               mode, e.g. 754 is same as u=rwx,g=rx,o=r.                         \n  \n  If none of 'augo' is specified, 'a' is assumed and unlike the shell command, no\n  umask is applied.\n\n-chown [-R] [OWNER][:[GROUP]] PATH... :\n  Changes owner and group of a file. This is similar to the shell's chown command\n  with a few exceptions.\n                                                                                 \n  -R  modifies the files recursively. This is the only option currently          \n      supported.                                                                 \n  \n  If only the owner or group is specified, then only the owner or group is\n  modified. The owner and group names may only consist of digits, alphabet, and\n  any of [-_./@a-zA-Z0-9]. The names are case sensitive.\n  \n  WARNING: Avoid using '.' to separate user name and group though Linux allows it.\n  If user names have dots in them and you are using local file system, you might\n  see surprising results since the shell command 'chown' is used for local files.\n\n-copyFromLocal [-f] [-p] [-l] <localsrc> ... <dst> :\n  Identical to the -put command.\n\n-copyToLocal [-p] [-ignoreCrc] [-crc] <src> ... <localdst> :\n  Identical to the -get command.\n\n-count [-q] [-h] [-v] [-t [<storage type>]] <path> ... :\n  Count the number of directories, files and bytes under the paths\n  that match the specified file pattern.  The output columns are:\n  DIR_COUNT FILE_COUNT CONTENT_SIZE PATHNAME\n  or, with the -q option:\n  QUOTA REM_QUOTA SPACE_QUOTA REM_SPACE_QUOTA\n        DIR_COUNT FILE_COUNT CONTENT_SIZE PATHNAME\n  The -h option shows file sizes in human readable format.\n  The -v option displays a header line.\n  The -t option displays quota by storage types.\n  It must be used with -q option.\n  If a comma-separated list of storage types is given after the -t option, \n  it displays the quota and usage for the specified types. \n  Otherwise, it displays the quota and usage for all the storage \n  types that support quota\n\n-cp [-f] [-p | -p[topax]] <src> ... <dst> :\n  Copy files that match the file pattern <src> to a destination.  When copying\n  multiple files, the destination must be a directory. Passing -p preserves status\n  [topax] (timestamps, ownership, permission, ACLs, XAttr). If -p is specified\n  with no <arg>, then preserves timestamps, ownership, permission. If -pa is\n  specified, then preserves permission also because ACL is a super-set of\n  permission. Passing -f overwrites the destination if it already exists. raw\n  namespace extended attributes are preserved if (1) they are supported (HDFS\n  only) and, (2) all of the source and target pathnames are in the /.reserved/raw\n  hierarchy. raw namespace xattr preservation is determined solely by the presence\n  (or absence) of the /.reserved/raw prefix and not by the -p option.\n\n-createSnapshot <snapshotDir> [<snapshotName>] :\n  Create a snapshot on a directory\n\n-deleteSnapshot <snapshotDir> <snapshotName> :\n  Delete a snapshot from a directory\n\n-df [-h] [<path> ...] :\n  Shows the capacity, free and used space of the filesystem. If the filesystem has\n  multiple partitions, and no path to a particular partition is specified, then\n  the status of the root partitions will be shown.\n                                                                                 \n  -h  Formats the sizes of files in a human-readable fashion rather than a number\n      of bytes.                                                                  \n\n-du [-s] [-h] <path> ... :\n  Show the amount of space, in bytes, used by the files that match the specified\n  file pattern. The following flags are optional:\n                                                                                 \n  -s  Rather than showing the size of each individual file that matches the      \n      pattern, shows the total (summary) size.                                   \n  -h  Formats the sizes of files in a human-readable fashion rather than a number\n      of bytes.                                                                  \n  \n  Note that, even without the -s option, this only shows size summaries one level\n  deep into a directory.\n  \n  The output is in the form \n  \tsize\tname(full path)\n\n-expunge :\n  Delete files from the trash that are older than the retention threshold\n\n-find <path> ... <expression> ... :\n  Finds all files that match the specified expression and\n  applies selected actions to them. If no <path> is specified\n  then defaults to the current working directory. If no\n  expression is specified then defaults to -print.\n  \n  The following primary expressions are recognised:\n    -name pattern\n    -iname pattern\n      Evaluates as true if the basename of the file matches the\n      pattern using standard file system globbing.\n      If -iname is used then the match is case insensitive.\n  \n    -print\n    -print0\n      Always evaluates to true. Causes the current pathname to be\n      written to standard output followed by a newline. If the -print0\n      expression is used then an ASCII NULL character is appended rather\n      than a newline.\n  \n  The following operators are recognised:\n    expression -a expression\n    expression -and expression\n    expression expression\n      Logical AND operator for joining two expressions. Returns\n      true if both child expressions return true. Implied by the\n      juxtaposition of two expressions and so does not need to be\n      explicitly specified. The second expression will not be\n      applied if the first fails.\n\n-get [-p] [-ignoreCrc] [-crc] <src> ... <localdst> :\n  Copy files that match the file pattern <src> to the local name.  <src> is kept. \n  When copying multiple files, the destination must be a directory. Passing -p\n  preserves access and modification times, ownership and the mode.\n\n-getfacl [-R] <path> :\n  Displays the Access Control Lists (ACLs) of files and directories. If a\n  directory has a default ACL, then getfacl also displays the default ACL.\n                                                                  \n  -R      List the ACLs of all files and directories recursively. \n  <path>  File or directory to list.                              \n\n-getfattr [-R] {-n name | -d} [-e en] <path> :\n  Displays the extended attribute names and values (if any) for a file or\n  directory.\n                                                                                 \n  -R             Recursively list the attributes for all files and directories.  \n  -n name        Dump the named extended attribute value.                        \n  -d             Dump all extended attribute values associated with pathname.    \n  -e <encoding>  Encode values after retrieving them.Valid encodings are \"text\", \n                 \"hex\", and \"base64\". Values encoded as text strings are enclosed\n                 in double quotes (\"), and values encoded as hexadecimal and     \n                 base64 are prefixed with 0x and 0s, respectively.               \n  <path>         The file or directory.                                          \n\n-getmerge [-nl] <src> <localdst> :\n  Get all the files in the directories that match the source file pattern and\n  merge and sort them to only one file on local fs. <src> is kept.\n                                                        \n  -nl  Add a newline character at the end of each file. \n\n-help [cmd ...] :\n  Displays help for given command or all commands if none is specified.\n\n-ls [-C] [-d] [-h] [-q] [-R] [-t] [-S] [-r] [-u] [<path> ...] :\n  List the contents that match the specified file pattern. If path is not\n  specified, the contents of /user/<currentUser> will be listed. For a directory a\n  list of its direct children is returned (unless -d option is specified).\n  \n  Directory entries are of the form:\n  \tpermissions - userId groupId sizeOfDirectory(in bytes)\n  modificationDate(yyyy-MM-dd HH:mm) directoryName\n  \n  and file entries are of the form:\n  \tpermissions numberOfReplicas userId groupId sizeOfFile(in bytes)\n  modificationDate(yyyy-MM-dd HH:mm) fileName\n  \n    -C  Display the paths of files and directories only.\n    -d  Directories are listed as plain files.\n    -h  Formats the sizes of files in a human-readable fashion\n        rather than a number of bytes.\n    -q  Print ? instead of non-printable characters.\n    -R  Recursively list the contents of directories.\n    -t  Sort files by modification time (most recent first).\n    -S  Sort files by size.\n    -r  Reverse the order of the sort.\n    -u  Use time of last access instead of modification for\n        display and sorting.\n\n-mkdir [-p] <path> ... :\n  Create a directory in specified location.\n                                                  \n  -p  Do not fail if the directory already exists \n\n-moveFromLocal <localsrc> ... <dst> :\n  Same as -put, except that the source is deleted after it's copied.\n\n-moveToLocal <src> <localdst> :\n  Not implemented yet\n\n-mv <src> ... <dst> :\n  Move files that match the specified file pattern <src> to a destination <dst>. \n  When moving multiple files, the destination must be a directory.\n\n-put [-f] [-p] [-l] <localsrc> ... <dst> :\n  Copy files from the local file system into fs. Copying fails if the file already\n  exists, unless the -f flag is given.\n  Flags:\n                                                                       \n  -p  Preserves access and modification times, ownership and the mode. \n  -f  Overwrites the destination if it already exists.                 \n  -l  Allow DataNode to lazily persist the file to disk. Forces        \n         replication factor of 1. This flag will result in reduced\n         durability. Use with care.\n\n-renameSnapshot <snapshotDir> <oldName> <newName> :\n  Rename a snapshot from oldName to newName\n\n-rm [-f] [-r|-R] [-skipTrash] [-safely] <src> ... :\n  Delete all files that match the specified file pattern. Equivalent to the Unix\n  command \"rm <src>\"\n                                                                                 \n  -f          If the file does not exist, do not display a diagnostic message or \n              modify the exit status to reflect an error.                        \n  -[rR]       Recursively deletes directories.                                   \n  -skipTrash  option bypasses trash, if enabled, and immediately deletes <src>.  \n  -safely     option requires safety confirmation, if enabled, requires          \n              confirmation before deleting large directory with more than        \n              <hadoop.shell.delete.limit.num.files> files. Delay is expected when\n              walking over large directory recursively to count the number of    \n              files to be deleted before the confirmation.                       \n\n-rmdir [--ignore-fail-on-non-empty] <dir> ... :\n  Removes the directory entry specified by each directory argument, provided it is\n  empty.\n\n-setfacl [-R] [{-b|-k} {-m|-x <acl_spec>} <path>]|[--set <acl_spec> <path>] :\n  Sets Access Control Lists (ACLs) of files and directories.\n  Options:\n                                                                                 \n  -b          Remove all but the base ACL entries. The entries for user, group   \n              and others are retained for compatibility with permission bits.    \n  -k          Remove the default ACL.                                            \n  -R          Apply operations to all files and directories recursively.         \n  -m          Modify ACL. New entries are added to the ACL, and existing entries \n              are retained.                                                      \n  -x          Remove specified ACL entries. Other ACL entries are retained.      \n  --set       Fully replace the ACL, discarding all existing entries. The        \n              <acl_spec> must include entries for user, group, and others for    \n              compatibility with permission bits.                                \n  <acl_spec>  Comma separated list of ACL entries.                               \n  <path>      File or directory to modify.                                       \n\n-setfattr {-n name [-v value] | -x name} <path> :\n  Sets an extended attribute name and value for a file or directory.\n                                                                                 \n  -n name   The extended attribute name.                                         \n  -v value  The extended attribute value. There are three different encoding     \n            methods for the value. If the argument is enclosed in double quotes, \n            then the value is the string inside the quotes. If the argument is   \n            prefixed with 0x or 0X, then it is taken as a hexadecimal number. If \n            the argument begins with 0s or 0S, then it is taken as a base64      \n            encoding.                                                            \n  -x name   Remove the extended attribute.                                       \n  <path>    The file or directory.                                               \n\n-setrep [-R] [-w] <rep> <path> ... :\n  Set the replication level of a file. If <path> is a directory then the command\n  recursively changes the replication factor of all files under the directory tree\n  rooted at <path>.\n                                                                                 \n  -w  It requests that the command waits for the replication to complete. This   \n      can potentially take a very long time.                                     \n  -R  It is accepted for backwards compatibility. It has no effect.              \n\n-stat [format] <path> ... :\n  Print statistics about the file/directory at <path>\n  in the specified format. Format accepts filesize in\n  blocks (%b), type (%F), group name of owner (%g),\n  name (%n), block size (%o), replication (%r), user name\n  of owner (%u), modification date (%y, %Y).\n  %y shows UTC date as \"yyyy-MM-dd HH:mm:ss\" and\n  %Y shows milliseconds since January 1, 1970 UTC.\n  If the format is not specified, %y is used by default.\n\n-tail [-f] <file> :\n  Show the last 1KB of the file.\n                                             \n  -f  Shows appended data as the file grows. \n\n-test -[defsz] <path> :\n  Answer various questions about <path>, with result via exit status.\n    -d  return 0 if <path> is a directory.\n    -e  return 0 if <path> exists.\n    -f  return 0 if <path> is a file.\n    -s  return 0 if file <path> is greater         than zero bytes in size.\n    -w  return 0 if file <path> exists         and write permission is granted.\n    -r  return 0 if file <path> exists         and read permission is granted.\n    -z  return 0 if file <path> is         zero bytes in size, else return 1.\n\n-text [-ignoreCrc] <src> ... :\n  Takes a source file and outputs the file in text format.\n  The allowed formats are zip and TextRecordInputStream and Avro.\n\n-touchz <path> ... :\n  Creates a file of zero length at <path> with current time as the timestamp of\n  that <path>. An error is returned if the file exists with non-zero length\n\n-truncate [-w] <length> <path> ... :\n  Truncate all files that match the specified file pattern to the specified\n  length.\n                                                                                 \n  -w  Requests that the command wait for block recovery to complete, if          \n      necessary.                                                                 \n\n-usage [cmd ...] :\n  Displays the usage for given command or all commands if none is specified.\n\nGeneric options supported are\n-conf <configuration file>     specify an application configuration file\n-D <property=value>            use value for given property\n-fs <local|namenode:port>      specify a namenode\n-jt <local|resourcemanager:port>    specify a ResourceManager\n-files <comma separated list of files>    specify comma separated files to be copied to the map reduce cluster\n-libjars <comma separated list of jars>    specify comma separated jar files to include in the classpath.\n-archives <comma separated list of archives>    specify comma separated archives to be unarchived on the compute machines.\n\nThe general command line syntax is\nbin/hadoop command [genericOptions] [commandOptions]\n\n"},"dateCreated":"2017-01-21T01:44:29+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1841"},{"text":"%sh\nhadoop fs -ls /tmp","dateUpdated":"2017-01-21T01:44:29+0000","config":{"colWidth":12,"editorMode":"ace/mode/sh","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484963069460_-462439318","id":"20170120-205828_867288095","result":{"code":"SUCCESS","type":"TEXT","msg":"Found 12 items\n-rw-r--r--   1 zeppelin  hdfs      54881 2017-01-20 20:40 /tmp/Hortonworks\n-rw-r--r--   1 zeppelin  hdfs      54881 2017-01-20 20:47 /tmp/Hortonworks.1\n-rw-r--r--   1 zeppelin  hdfs      54881 2017-01-20 20:47 /tmp/Hortonworks.2\n-rw-r--r--   1 zeppelin  hdfs      54881 2017-01-20 20:47 /tmp/Hortonworks.3\n-rw-r--r--   1 zeppelin  hdfs      54881 2017-01-20 20:47 /tmp/Hortonworks.4\n-rw-r--r--   1 zeppelin  hdfs      54881 2017-01-20 20:47 /tmp/Hortonworks.5\n-rw-r--r--   1 zeppelin  hdfs      10411 2017-01-20 22:15 /tmp/data\ndrwxr-xr-x   - hdfs      hdfs          0 2016-12-13 22:25 /tmp/entity-file-history\ndrwx-wx-wx   - ambari-qa hdfs          0 2017-01-21 00:06 /tmp/hive\n-rw-r--r--   1 zeppelin  hdfs    2144903 2017-01-20 21:02 /tmp/kddcup.data_10_percent.gz\ndrwxrwxrwx   - hdfs      hdfs          0 2016-12-13 22:47 /tmp/tweets_staging\ndrwxr-xr-x   - zeppelin  hdfs          0 2017-01-20 22:19 /tmp/wordcount\n"},"dateCreated":"2017-01-21T01:44:29+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1842"},{"title":"week2.pdf, slide 103: Download the Data","text":"%sh\nhadoop fs -rm /tmp/kddcup.data_10_percent.gz\nwget http://kdd.ics.uci.edu/databases/kddcup99/kddcup.data_10_percent.gz \\\n-O /tmp/kddcup.data_10_percent.gz","user":"admin","dateUpdated":"2017-01-25T07:55:19+0000","config":{"colWidth":12,"editorMode":"ace/mode/sh","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"title":true,"tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484963069460_-462439318","id":"20170120-205902_206116938","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-01-21T01:44:29+0000","dateStarted":"2017-01-25T07:55:20+0000","dateFinished":"2017-01-25T07:55:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1843"},{"text":"%sh\nwget http://kdd.ics.uci.edu/databases/kddcup99/kddcup.data_10_percent.gz \\\n-O /tmp/kddcup.data_10_percent.gz","dateUpdated":"2017-01-21T01:44:29+0000","config":{"colWidth":12,"editorMode":"ace/mode/sh","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484963069460_-462439318","id":"20170120-210004_373910350","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-01-21T01:44:29+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1844"},{"text":"%sh\nls -la /tmp","dateUpdated":"2017-01-21T01:44:29+0000","config":{"colWidth":12,"editorMode":"ace/mode/sh","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484963069460_-462439318","id":"20170120-210019_2042187139","result":{"code":"SUCCESS","type":"TEXT","msg":"total 2692\ndrwxrwxrwt. 46 root       root        4096 Jan 20 21:00 .\ndr-xr-xr-x. 28 root       root        4096 Jan 20 18:41 ..\ndrwx------   2 hive       hadoop      4096 Jan 20 18:54 44cbc4c0-f652-4468-a39f-2363cb33d100_resources\ndrwx------   2 zeppelin   hadoop      4096 Jan 20 20:35 50d26a64-5c64-4201-b1aa-4355530dcc36_resources\n-rw-r--r--   1 root       root        6664 Jan 20 18:39 ambari.properties.6\n-rw-r--r--   1 root       root        6664 Jan 20 18:39 ambari.properties.7\ndrwxr-xr-x   2 ambari-qa  hadoop      4096 Jan 20 20:59 ambari-qa\ndrwxr-xr-x   7 zeppelin   hadoop      4096 Jan 20 20:52 blockmgr-ff0cf7a0-9a4d-4563-a491-30056e9f23ab\ndrwx------   2 zeppelin   hadoop      4096 Jan 20 20:35 eb43479d-4bcf-4dc4-8c61-10697482d5fa_resources\n-rw-r--r--   1 root       root        3150 Jan 20 18:41 ehcache-sizeof-agent1628360642405620988.jar\ndrwxr-xr-x   4 hive       hadoop      4096 Jan 20 18:54 hadoop-unjar1472968326848039109\ndrwxr-xr-x   4 hive       hadoop      4096 Jan 20 18:49 hadoop-unjar16395532471197201\ndrwxr-xr-x   4 hcat       hadoop      4096 Jan 20 18:55 hadoop-unjar315538117615364091\ndrwxr-xr-x   4 hive       hadoop      4096 Jan 20 20:59 hive\ndrwxr-xr-x   2 ambari-qa  hadoop      4096 Jan 20 20:59 hsperfdata_ambari-qa\ndrwxr-xr-x   2 ams        hadoop      4096 Jan 20 18:53 hsperfdata_ams\ndrwxr-xr-x   2 atlas      hadoop      4096 Jan 20 18:54 hsperfdata_atlas\ndrwxr-xr-x   2 hbase      hadoop      4096 Jan 20 18:53 hsperfdata_hbase\ndrwxr-xr-x   2 hcat       hadoop      4096 Jan 20 18:55 hsperfdata_hcat\ndrwxr-xr-x   2 hdfs       hadoop      4096 Jan 20 18:50 hsperfdata_hdfs\ndrwxr-xr-x   2 hive       hadoop      4096 Jan 20 18:54 hsperfdata_hive\ndrwxr-xr-x   2 infra-solr hadoop      4096 Jan 20 18:44 hsperfdata_infra-solr\ndrwxr-xr-x   2 kafka      hadoop      4096 Jan 20 18:50 hsperfdata_kafka\ndrwxr-xr-x   2 logsearch  hadoop      4096 Jan 20 18:45 hsperfdata_logsearch\ndrwxr-xr-x   2 mapred     hadoop      4096 Jan 20 18:49 hsperfdata_mapred\ndrwxr-xr-x   2 nifi       hadoop      4096 Jan 20 18:44 hsperfdata_nifi\ndrwxr-xr-x   2 root       root        4096 Jan 20 18:59 hsperfdata_root\ndrwxr-xr-x   2 solr       hadoop      4096 Jan 20 18:45 hsperfdata_solr\ndrwxr-xr-x   2 spark      hadoop      4096 Jan 20 19:03 hsperfdata_spark\ndrwxr-xr-x   2 storm      hadoop      4096 Jan 20 18:53 hsperfdata_storm\ndrwxr-xr-x   2 yarn       hadoop      4096 Jan 20 20:35 hsperfdata_yarn\ndrwxr-xr-x   2 zeppelin   hadoop      4096 Jan 20 21:00 hsperfdata_zeppelin\ndrwxr-xr-x   2 zookeeper  hadoop      4096 Jan 20 18:44 hsperfdata_zookeeper\ndrwxrwxrwt   2 root       root        4096 Jan 20 18:36 .ICE-unix\nsrw-------   1 root       root           0 Dec 13 22:54 .java_pid13180\nsrw-------   1 root       root           0 Jan 20 18:41 .java_pid2899\ndrwxr-xr-x   4 hbase      hadoop      4096 Jan 20 18:49 Jetty_0_0_0_0_16010_master____.6nvknp\ndrwxr-xr-x   4 hbase      hadoop      4096 Jan 20 18:50 Jetty_0_0_0_0_16030_regionserver____.45q9os\ndrwxr-xr-x   3 atlas      hadoop      4096 Jan 20 18:56 jetty-0.0.0.0-21000-atlas-_-any-902440616579905241.dir\ndrwxr-xr-x   2 logsearch  hadoop      4096 Jan 20 18:46 jetty-0.0.0.0-61888-app-_-any-647180776946412865.dir\ndrwxr-xr-x   3 hdfs       hadoop      4096 Jan 20 18:44 Jetty_0_0_0_0_8480_journal____.8g4awa\ndrwxr-xr-x   2 infra-solr hadoop      4096 Jan 20 18:44 jetty-0.0.0.0-8886-webapp-_solr-any-5989457715723335593.dir\ndrwxr-xr-x   3 hdfs       hadoop      4096 Jan 20 18:46 Jetty_demo_hortonworks_com_50070_hdfs____.bwxbt\ndrwxr-xr-x   3 hdfs       hadoop      4096 Jan 20 18:50 Jetty_demo_hortonworks_com_50090_secondary____.m4l1g\ndrwxr-xr-x   4 ams        hadoop      4096 Jan 20 18:53 Jetty_demo_hortonworks_com_6188_applicationhistory____.7hte7f\ndrwxr-xr-x   3 hdfs       hadoop      4096 Jan 20 18:45 Jetty_localhost_38186_datanode____.5so0q7\ndrwxr-xr-x   2 nifi       hadoop      4096 Jan 20 18:51 jna-3381182\n-rw-r--r--   1 zeppelin   hadoop   2144903 Jun 26  2007 kddcup.data_10_percent.gz\n-rw-r--r--   1 spark      hadoop     56782 Jan 20 19:03 libnetty-transport-native-epoll5243775054527724742.so\n-rw-r--r--   1 zeppelin   hadoop     56782 Jan 20 20:35 libnetty-transport-native-epoll7710268505037776202.so\n-rwxr--r--   1 zeppelin   hadoop    263376 Jan 20 20:40 snappy-1.1.2-c8ac11ad-f029-4292-95f1-94debaf3476b-libsnappyjava.so\ndrwxr-xr-x  22 zeppelin   hadoop      4096 Jan 20 20:36 spark-00cf1d62-380f-4a3b-889d-1b90086a735c\ndrwx------   5 zeppelin   hadoop      4096 Jan 20 20:40 spark-4bfd5c99-2e8d-40b8-ab1d-23f46e7d886f\ndrwxr-xr-x   3 zeppelin   hadoop      4096 Jan 20 20:35 spark-94115591-55f4-49ea-aeef-5702ac8226fc\nsrwxrwxrwx   1 postgres   postgres       0 Jan 20 20:34 .s.PGSQL.5432\n-rw-------   1 postgres   postgres      25 Jan 20 20:34 .s.PGSQL.5432.lock\ndrwx------   4 zeppelin   hadoop      4096 Jan 20 20:35 zeppelin\n-rw-r--r--   1 root       root        6061 Jan 20 18:41 zeppelin-env.json\n-rw-r--r--   1 zeppelin   hadoop      8039 Jan 20 20:40 zeppelin_pyspark-7545434041086211814.py\n"},"dateCreated":"2017-01-21T01:44:29+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1845"},{"title":"week2.pdf slide 104: Load data in HDFS","text":"%sh\nhadoop fs -put /tmp/kddcup.data_10_percent.gz /tmp\nhadoop fs -ls -h /tmp/kddcup.data_10_percent.gz","user":"admin","dateUpdated":"2017-01-25T07:55:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/sh","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484963069461_-462824067","id":"20170120-210124_1509483591","result":{"code":"SUCCESS","type":"TEXT","msg":"-rw-r--r--   1 zeppelin hdfs      2.0 M 2017-01-25 07:55 /tmp/kddcup.data_10_percent.gz\n"},"dateCreated":"2017-01-21T01:44:29+0000","dateStarted":"2017-01-25T07:55:42+0000","dateFinished":"2017-01-25T07:55:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1846"},{"text":"%sh\nhadoop fs -ls -h /tmp/kddcup.data_10_percent.gz","dateUpdated":"2017-01-21T01:44:29+0000","config":{"colWidth":12,"editorMode":"ace/mode/sh","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484963069461_-462824067","id":"20170120-210223_96162847","result":{"code":"SUCCESS","type":"TEXT","msg":"-rw-r--r--   1 zeppelin hdfs      2.0 M 2017-01-21 01:23 /tmp/kddcup.data_10_percent.gz\n"},"dateCreated":"2017-01-21T01:44:29+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1847"},{"text":"%sh\nrm  /tmp/kddcup.data_10_percent.gz","dateUpdated":"2017-01-21T01:44:29+0000","config":{"colWidth":12,"editorMode":"ace/mode/sh","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484963069461_-462824067","id":"20170120-210235_151890871","result":{"code":"ERROR","type":"TEXT","msg":"rm: cannot remove `/tmp/kddcup.data_10_percent.gz': No such file or directory\nExitValue: 1"},"dateCreated":"2017-01-21T01:44:29+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1848"},{"text":"%sh\ninput_file = \"hdfs:///tmp/kddcup.data_10_percent.gz\"\n","dateUpdated":"2017-01-21T01:44:29+0000","config":{"colWidth":12,"editorMode":"ace/mode/sh","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484963069461_-462824067","id":"20170120-210306_282788961","result":{"code":"ERROR","type":"TEXT","msg":"bash: input_file: command not found\nExitValue: 127"},"dateCreated":"2017-01-21T01:44:29+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1849"},{"title":"week2.pdf slide 105: First RDD","text":"%pyspark\ninput_file = \"hdfs:///tmp/kddcup.data_10_percent.gz\"\nraw_rdd = sc.textFile(input_file)","user":"admin","dateUpdated":"2017-01-25T07:56:02+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484963069461_-462824067","id":"20170120-210333_360691551","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-01-21T01:44:29+0000","dateStarted":"2017-01-25T07:56:02+0000","dateFinished":"2017-01-25T07:56:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1850"},{"text":"%pyspark\nraw_rdd = sc.textFile(input_file)","dateUpdated":"2017-01-21T01:44:29+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484963069461_-462824067","id":"20170120-210416_184905726","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-01-21T01:44:29+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1851"},{"title":"week2.pdf slide 106: Retrieving version and con guration information","text":"%spark\nsc.version\nsc.getConf.get(\"spark.home\")\nSystem.getenv().get(\"PYTHONPATH\")\nSystem.getenv().get(\"SPARK_HOME\")","user":"admin","dateUpdated":"2017-01-25T07:57:38+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484963069461_-462824067","id":"20170120-210435_1256399885","result":{"code":"SUCCESS","type":"TEXT","msg":"res0: String = 1.6.2\nres1: String = /usr/hdp/2.5.3.0-37/spark\nres2: String = /usr/hdp/current/spark-client/python/lib/py4j-0.9-src.zip:/usr/hdp/current/spark-client/python/:/usr/hdp/current/spark-client/python:/usr/hdp/current/spark-client/python/lib/py4j-0.8.2.1-src.zip\nres3: String = /usr/hdp/2.5.3.0-37/spark\n"},"dateCreated":"2017-01-21T01:44:29+0000","dateStarted":"2017-01-25T07:57:38+0000","dateFinished":"2017-01-25T07:57:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1852"},{"text":"%spark\nSystem.getenv().get(\"PYTHONPATH\")\nSystem.getenv().get(\"SPARK_HOME\")","dateUpdated":"2017-01-21T01:44:29+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484963069461_-462824067","id":"20170120-210453_1870169983","result":{"code":"SUCCESS","type":"TEXT","msg":"res58: String = /usr/hdp/current/spark-client/python/lib/py4j-0.9-src.zip:/usr/hdp/current/spark-client/python/:/usr/hdp/current/spark-client/python:/usr/hdp/current/spark-client/python/lib/py4j-0.8.2.1-src.zip\nres59: String = /usr/hdp/2.5.3.0-37/spark\n"},"dateCreated":"2017-01-21T01:44:29+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1853"},{"title":"week2.pdf slide 107: Count the number of rows in the dataset","text":"%pyspark\nprint raw_rdd.count()\n","user":"admin","dateUpdated":"2017-01-25T07:57:56+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484963069461_-462824067","id":"20170120-210641_334579728","result":{"code":"SUCCESS","type":"TEXT","msg":"494021\n"},"dateCreated":"2017-01-21T01:44:29+0000","dateStarted":"2017-01-25T07:57:56+0000","dateFinished":"2017-01-25T07:58:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1854"},{"title":"week2.pdf slide 108: Inspect what the data looks like","text":"%pyspark\nprint raw_rdd.take(5)","user":"admin","dateUpdated":"2017-01-25T07:58:17+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484963069461_-462824067","id":"20170121-012701_1247902749","result":{"code":"SUCCESS","type":"TEXT","msg":"[u'0,tcp,http,SF,181,5450,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,8,8,0.00,0.00,0.00,0.00,1.00,0.00,0.00,9,9,1.00,0.00,0.11,0.00,0.00,0.00,0.00,0.00,normal.', u'0,tcp,http,SF,239,486,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,8,8,0.00,0.00,0.00,0.00,1.00,0.00,0.00,19,19,1.00,0.00,0.05,0.00,0.00,0.00,0.00,0.00,normal.', u'0,tcp,http,SF,235,1337,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,8,8,0.00,0.00,0.00,0.00,1.00,0.00,0.00,29,29,1.00,0.00,0.03,0.00,0.00,0.00,0.00,0.00,normal.', u'0,tcp,http,SF,219,1337,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,6,6,0.00,0.00,0.00,0.00,1.00,0.00,0.00,39,39,1.00,0.00,0.03,0.00,0.00,0.00,0.00,0.00,normal.', u'0,tcp,http,SF,217,2032,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,6,6,0.00,0.00,0.00,0.00,1.00,0.00,0.00,49,49,1.00,0.00,0.02,0.00,0.00,0.00,0.00,0.00,normal.']\n"},"dateCreated":"2017-01-21T01:44:29+0000","dateStarted":"2017-01-25T07:58:17+0000","dateFinished":"2017-01-25T07:58:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1855"},{"title":"week2.pdf slide 109: Spreading data across the cluster","text":"%pyspark\na = range(100)\ndata = sc.parallelize(a)","user":"admin","dateUpdated":"2017-01-25T07:58:34+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484963069461_-462824067","id":"20170120-210747_2058033563","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-01-21T01:44:29+0000","dateStarted":"2017-01-25T07:58:34+0000","dateFinished":"2017-01-25T07:58:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1856"},{"title":"week2.pdf slide 110: Filtering lines in the data","text":"%pyspark\nnormal_raw_rdd = raw_rdd.filter(lambda x: 'normal.' in x)","user":"admin","dateUpdated":"2017-01-25T07:59:02+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484963069461_-462824067","id":"20170120-210933_355230814","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-01-21T01:44:29+0000","dateStarted":"2017-01-25T07:59:02+0000","dateFinished":"2017-01-25T07:59:02+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1857"},{"text":"%pyspark\nnormal_count = normal_raw_rdd.count()\nprint normal_count\n","user":"admin","dateUpdated":"2017-01-25T07:59:47+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484963069461_-462824067","id":"20170120-210954_454891434","result":{"code":"SUCCESS","type":"TEXT","msg":"97278\n"},"dateCreated":"2017-01-21T01:44:29+0000","dateStarted":"2017-01-25T07:59:47+0000","dateFinished":"2017-01-25T07:59:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1858"},{"title":"week2.pdf slide 111: Count the  filtered RDD","text":"%pyspark\rnormal_count = normal_raw_rdd.count()\rprint normal_count","dateUpdated":"2017-01-25T08:00:27+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484963069461_-462824067","id":"20170121-012855_1495768116","result":{"code":"ERROR","type":"TEXT","msg":"Traceback (most recent call last):\n  File \"/tmp/zeppelin_pyspark-7545434041086211814.py\", line 237, in <module>\n    compiledCode = compile(final_code, \"<string>\", \"exec\")\n  File \"<string>\", line 1\n    normal_count = normal_raw_rdd.count()\rprint normal_count\n                                        \r^\nSyntaxError: invalid syntax\n"},"dateCreated":"2017-01-21T01:44:29+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1859"},{"title":"week2.pdf slide 112: Importing local libraries","text":"%pyspark\nfrom pprint import pprint\ncsv_rdd = raw_rdd.map(lambda x: x.split(\",\"))\nhead_rows = csv_rdd.take(5)\npprint(head_rows[0])","user":"admin","dateUpdated":"2017-01-25T08:00:58+0000","config":{"tableHide":false,"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484963069461_-462824067","id":"20170121-012852_1223352001","result":{"code":"SUCCESS","type":"TEXT","msg":"[u'0',\n u'tcp',\n u'http',\n u'SF',\n u'181',\n u'5450',\n u'0',\n u'0',\n u'0',\n u'0',\n u'0',\n u'1',\n u'0',\n u'0',\n u'0',\n u'0',\n u'0',\n u'0',\n u'0',\n u'0',\n u'0',\n u'0',\n u'8',\n u'8',\n u'0.00',\n u'0.00',\n u'0.00',\n u'0.00',\n u'1.00',\n u'0.00',\n u'0.00',\n u'9',\n u'9',\n u'1.00',\n u'0.00',\n u'0.11',\n u'0.00',\n u'0.00',\n u'0.00',\n u'0.00',\n u'0.00',\n u'normal.']\n"},"dateCreated":"2017-01-21T01:44:29+0000","dateStarted":"2017-01-25T08:00:58+0000","dateFinished":"2017-01-25T08:00:58+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1860"},{"dateUpdated":"2017-01-21T01:44:29+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484963069462_-461669820","id":"20170121-012850_1210849188","dateCreated":"2017-01-21T01:44:29+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1861"},{"title":"week2.pdf slide 113: Using non-lambda functions in transformation","text":"%pyspark\ndef parse_interaction(line):\n    elems = line.split(\",\")\n    tag = elems[41]\n    return (tag, elems)\nkey_csv_rdd = raw_rdd.map(parse_interaction)\nhead_rows = key_csv_rdd.take(5)\npprint(head_rows[0])","user":"admin","dateUpdated":"2017-01-25T08:02:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484963069462_-461669820","id":"20170120-211048_203688566","result":{"code":"SUCCESS","type":"TEXT","msg":"(u'normal.',\n [u'0',\n  u'tcp',\n  u'http',\n  u'SF',\n  u'181',\n  u'5450',\n  u'0',\n  u'0',\n  u'0',\n  u'0',\n  u'0',\n  u'1',\n  u'0',\n  u'0',\n  u'0',\n  u'0',\n  u'0',\n  u'0',\n  u'0',\n  u'0',\n  u'0',\n  u'0',\n  u'8',\n  u'8',\n  u'0.00',\n  u'0.00',\n  u'0.00',\n  u'0.00',\n  u'1.00',\n  u'0.00',\n  u'0.00',\n  u'9',\n  u'9',\n  u'1.00',\n  u'0.00',\n  u'0.11',\n  u'0.00',\n  u'0.00',\n  u'0.00',\n  u'0.00',\n  u'0.00',\n  u'normal.'])\n"},"dateCreated":"2017-01-21T01:44:29+0000","dateStarted":"2017-01-25T08:02:42+0000","dateFinished":"2017-01-25T08:02:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1862"},{"title":"week2.pdf slide 114: Using collect() on the Spark driver","text":"%pyspark\nall_raw_rdd = raw_rdd.collect()","user":"admin","dateUpdated":"2017-01-25T08:05:55+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484963069462_-461669820","id":"20170120-211207_1813141911","result":{"code":"ERROR","type":"TEXT","msg":"Py4JJavaError: An error occurred while calling z:org.apache.spark.api.python.PythonRDD.collectAndServe.\n: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 6.0 failed 4 times, most recent failure: Lost task 0.3 in stage 6.0 (TID 12, demo.hortonworks.com): ExecutorLostFailure (executor 4 exited caused by one of the running tasks) Reason: Slave lost\nDriver stacktrace:\n\tat org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1433)\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1421)\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1420)\n\tat scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)\n\tat scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:47)\n\tat org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:1420)\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:801)\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:801)\n\tat scala.Option.foreach(Option.scala:236)\n\tat org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:801)\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:1642)\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1601)\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1590)\n\tat org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48)\n\tat org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:622)\n\tat org.apache.spark.SparkContext.runJob(SparkContext.scala:1856)\n\tat org.apache.spark.SparkContext.runJob(SparkContext.scala:1869)\n\tat org.apache.spark.SparkContext.runJob(SparkContext.scala:1882)\n\tat org.apache.spark.SparkContext.runJob(SparkContext.scala:1953)\n\tat org.apache.spark.rdd.RDD$$anonfun$collect$1.apply(RDD.scala:934)\n\tat org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:150)\n\tat org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:111)\n\tat org.apache.spark.rdd.RDD.withScope(RDD.scala:323)\n\tat org.apache.spark.rdd.RDD.collect(RDD.scala:933)\n\tat org.apache.spark.api.python.PythonRDD$.collectAndServe(PythonRDD.scala:405)\n\tat org.apache.spark.api.python.PythonRDD.collectAndServe(PythonRDD.scala)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:231)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:381)\n\tat py4j.Gateway.invoke(Gateway.java:259)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:133)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.GatewayConnection.run(GatewayConnection.java:209)\n\tat java.lang.Thread.run(Thread.java:745)\n\n(<class 'py4j.protocol.Py4JJavaError'>, Py4JJavaError(u'An error occurred while calling z:org.apache.spark.api.python.PythonRDD.collectAndServe.\\n', JavaObject id=o166), <traceback object at 0x2513a70>)"},"dateCreated":"2017-01-21T01:44:29+0000","dateStarted":"2017-01-25T08:05:55+0000","dateFinished":"2017-01-25T08:06:13+0000","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:1863"},{"text":"%pyspark\nmyRdd = sc. parallelize([1,2,3,4])\npprint(myRdd)","user":"admin","dateUpdated":"2017-01-25T08:12:43+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1484963069462_-461669820","id":"20170120-211305_264637447","result":{"code":"SUCCESS","type":"TEXT","msg":"ParallelCollectionRDD[10] at parallelize at PythonRDD.scala:423\n"},"dateCreated":"2017-01-21T01:44:29+0000","dateStarted":"2017-01-25T08:12:43+0000","dateFinished":"2017-01-25T08:12:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1864"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1485331927385_-1307504299","id":"20170125-081207_1687969627","dateCreated":"2017-01-25T08:12:07+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:1865"}],"name":"BigData Class 2","id":"2C9NWC9BC","angularObjects":{"2C564P1ZC:shared_process":[],"2C59P4C9R:shared_process":[],"2C3P8E39F:shared_process":[],"2C49HJ26C:shared_process":[],"2C4KWV68J:shared_process":[],"2C3UF1C9F:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}